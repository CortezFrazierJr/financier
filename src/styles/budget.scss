$budgetMonthCellPadding: 2px 5px 0;

.budget {
  height: 100%;
}

.budget__table {
  display: flex;
  flex-direction: column;
  overflow: auto;
  height: 100%;
}

.budget__tbody,
.budget__thead,
.budget__tfoot {
  flex-grow: 0;
  flex-shrink: 0;
  overflow-y: scroll;
}

.budget__tbody,
.budget__thead,
.budget__tfoot {
  &.overflowable {
    flex-grow: 1;
    flex-shrink: 1;

    // For tether.js
    // https://github.com/HubSpot/tether/issues/135#issuecomment-167601049
    position: relative;
  }
}

.budget__tr {
  display: flex;
  flex-direction: row;
  // flex-grow: 1;
  flex-shrink: 0;
}

.budget__td,
.budget__th {
  width: 0%;
  display: block;
  flex-direction: column;
  flex-shrink: 1;
  flex-grow: 1;
}

.budget__th,
.budget__td {
  @for $i from 1 through 18 {
    &[colspan='#{$i}'] {
      flex-shrink: $i;
      flex-grow: $i;
      flex-basis: 0;
    }
  }
}

.budget__month-end {
  margin-right: 5px;
}

.budget__month-row-note {
  opacity: 0;
  padding: 0 1px; // prevent cutoff

  cursor: pointer;

  &.drop-enabled {
    opacity: 1;
  }
}

.budget__month-row-note--showing {
  opacity: 0.5;
}

.budget__month--current {

}

.budget__month-row {
  padding: $budgetMonthCellPadding;
  transition: color 250ms linear;

  box-sizing: content-box;

  &:hover {
    .budget__month-row-note {
      opacity: 1;
    }
  }
}

.budget__month-row--zero {
  color: #aaa;
}

.budget__month-row--none {
  color: $white;
}

.budget__month-row--negative {
  color: $white;
  border-radius: 10px;
  background-color: $danger;
  padding: 0 5px;

  i {
    vertical-align: top;
    padding-top: 3px;
  }
}

.budget__month-cell--input {
  position: relative;

  margin-right: -1px;
  margin-bottom: -1px;

  .budget__month-row--last & {
    margin-bottom: 0px;
  }

  // we want the input to emulate the cell
  // ...
  // prepare yoself before u wrek yoself
  input {
    // behave like a normal element
    box-sizing: border-box;
  
    // cancel out padding from the cell
    // we can't set padding from the cell to zero
    // because it would wreck the layout
    margin-left: -5px;
    margin-top: -2px;
    
    // "effective" 100%, after adding margin
    width: calc(100% + 10px);
  
    // now we add the padding back to the input
    padding-right: 5px;
  
    // this is weird. 2em "magic number" minus 1px
    // for border collapsing (see the cell
    // border-bottom: -1px)
    height: 24px;

    appearance: none;
    background: none;
    text-align: right;
    border: 1px solid lighten(desaturate($primary, 10%), 20%);
    
    // should override the grey border of the cell to
    // the right (after in the DOM, aka on top by default)
    position: relative;
    z-index: $zMonthCellInput;

    &:hover,
    &:focus {
      // make sure all borders are seen of the
      // important cell
      z-index: $zMonthCellInputFocus;
      border: 1px solid darken($primary, 20%);
    }

    &:focus {
      outline: none;
    }
  }

  i {
    position: absolute;
    left: 0.5em;
    top: 0;
    line-height: 2em;

    z-index: $zMonthCellNote;
  }
}

.budget__month-cell--display {
  border-top: 1px dotted #ddd;
  border-left: 1px dotted #ddd;

  &.budget__month-end {
    border-right: 1px dotted #ddd;
  }

  .budget__month-row--last & {
    border-bottom: 1px dotted #ddd;
  }
}

.budget__month-row--ghost {
  visibility: hidden;
}

.budget__category-sortable {
  // Drop area for categories when empty
  min-height: 3px;
}

.budget__category-label {
  font-size: 0.8em;
  width: 50px; // px to prevent rounding issues
  text-align: right;

  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;

  position: relative;
}

.budget__categories-label {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;

  color: #999;
}

.budget__add-master-category {
  display: inline-block;

  width: 1em;
  height: 1em;
  margin: 0.25em;

  line-height: 1;

  vertical-align: top;

  text-align: center;

  background-color: #999;
  color: $white;

  &:after {
    content: '+';
  }
}

.budget__add-category {
  display: inline-block;

  width: 1em;
  height: 1em;
  margin: 0.25em;

  line-height: 1;

  vertical-align: top;

  text-align: center;

  background-color: #999;
  color: $white;
  font-weight: 500;

  &:after {
    content: '+';
  }
}
